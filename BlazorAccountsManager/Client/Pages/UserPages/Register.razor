@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="@HandleRegistration">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col-sm-6 mb-3">
            <label for="firstName">First Name</label>
            <InputText id="firstName" @bind-Value="user.FirstName" class="form-control" />
            <ValidationMessage For="@(() => user.FirstName)" />
        </div>
        <div class="col-sm-6 mb-3">
            <label for="lastName">Surname</label>
            <InputText id="lastName" @bind-Value="user.LastName" class="form-control" />
            <ValidationMessage For="@(() => user.LastName)" />
        </div>
    </div>
     <div class="mb-3">
        <label for="displayName">Display name</label>
        <InputText id="displayName" @bind-Value="user.DisplayName" class="form-control" />
        <ValidationMessage For="@(() => user.DisplayName)" />
    </div>

    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>

    <div class="row">
        <div class="col-sm-6 mb-3">
            <label for="password">Password</label>
            <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>
        <div class="col-sm-6 mb-3">
            <label for="confirmPassword">Confirm Password</label>
            <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
            <ValidationMessage For="@(() => user.ConfirmPassword)" />
        </div>
    </div>

    
    <button type="submit" class="btn btn-primary w-100">Register</button>

    <div class="@messageCssClass">
        <span>@message</span>
    </div>
</EditForm>








@code {
    RegisterDto user = new RegisterDto();
    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
            NavigationManager.NavigateTo("/login");
        else
            messageCssClass = "text-danger";
    }





    










}
